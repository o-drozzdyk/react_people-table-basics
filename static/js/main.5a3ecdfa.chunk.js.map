{"version":3,"sources":["pages/HomePage.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/Loader/Loader.tsx","pages/PeoplePage.tsx","utils/fetchPeople.tsx","pages/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","PersonLink","person","people","name","sex","born","died","fatherName","motherName","slug","selectedSlug","useParams","mother","father","motherSlug","find","human","fatherSlug","cn","to","PeopleTable","map","Loader","PeoplePage","useState","setPeople","isError","setIsError","isLoading","setIsLoading","useEffect","url","fetch","then","response","ok","Error","json","catch","finally","length","NotFoundPage","App","getLinkClass","isActive","role","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.5a3ecdfa.chunk.js","sourcesContent":["export const HomePage:React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Link, useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n  people: Person[];\n};\n\nexport const PersonLink: React.FC<Props> = ({ person, people }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n  } = person;\n\n  const { selectedSlug } = useParams();\n\n  const mother = motherName || '-';\n  const father = fatherName || '-';\n\n  const motherSlug = people.find(human => human.name === motherName)?.slug;\n  const fatherSlug = people.find(human => human.name === fatherName)?.slug;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': selectedSlug === slug,\n      })}\n    >\n      <td>\n        <Link\n          to={`/people/${slug}`}\n          className={cn({\n            'has-text-danger': sex === 'f',\n          })}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {motherSlug\n          ? (\n            <Link\n              to={`/people/${motherSlug}`}\n              className=\"has-text-danger\"\n            >\n              {mother}\n            </Link>\n          )\n          : mother}\n      </td>\n      <td>\n        {fatherSlug\n          ? (\n            <Link to={`/people/${fatherSlug}`}>\n              {father}\n            </Link>\n          )\n          : father}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          return (\n            <PersonLink\n              person={person}\n              people={people}\n              key={person.slug}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { fetchPeople } from '../utils/fetchPeople';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\nimport { Loader } from '../components/Loader';\n\nconst BASE_URL\n  = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetchPeople(BASE_URL)\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {isLoading\n            ? <Loader />\n            : (\n              <>\n                {isError && (\n                  <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                    Something went wrong\n                  </p>\n                )}\n\n                {people.length\n                  ? <PeopleTable people={people} />\n                  : (\n                    <p data-cy=\"noPeopleMessage\">\n                      There are no people on the server\n                    </p>\n                  )}\n              </>\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export function fetchPeople(url: string) {\n  return fetch(url)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('People can not be loaded');\n      }\n\n      return response.json();\n    });\n}\n","export const NotFoundPage:React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './App.scss';\nimport cn from 'classnames';\nimport {\n  NavLink,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const App = () => {\n  const getLinkClass = ({ isActive }: { isActive: boolean }) => {\n    return cn('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    });\n  };\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink to=\"/\" className={getLinkClass}>\n              Home\n            </NavLink>\n\n            <NavLink to=\"/people\" className={getLinkClass}>\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/people/:selectedSlug?\" element={<PeoplePage />} />\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}